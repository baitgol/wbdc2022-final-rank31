******************初赛5折*********************
distrill=False  线下0.6700
distrill=True   线下0.6752
*************20220706*************
# 时间记录
# finetune  训练100step 100s
 max_frames = 8
 bert_seq_length = 32
 train_batch_size = 32

# 1、数据量20000，推理时间251s, batch_size=128,314s
## config配置建议
prefetch = 4
num_workers= 2
val_batch_size = 256

# 2、数据量20000，推理时间190s, 3轮迭代中OOM
prefetch = 8
num_workers= 4
val_batch_size = 256

# 3、数据量20000，内存OOM
prefetch = 16
num_workers= 8
val_batch_size = 256

# 4、 测试 inference, 2轮迭代的，线下6741
## 1. 数据量: 25000
    batch_size 1024
    prefetch = 16
    num_workers= 8
    OOM
## 2、 batch_size 1024/ 512
    prefetch = 16
    num_workers= 8
    显存不够

## 3、 不算加载模型写文件 238s, 总计248s
    batch_size 256
    prefetch = 16
    num_workers= 4
## 4.不算加载模型写文件 238s, 总计254s
    batch_size 256
    prefetch = 8
    num_workers= 4

### 5. version=2.0线上测试通过, 总计296s, 日志打印是显示241,255， 线上0.6746，线下+EMA的4轮/10轮0.6793, loss=1.336
    batch_size 256
    prefetch = 8
    num_workers= 4
*************20220707*************
## version=3.0 distrill=False  线下0.6803， 不能取过拟合的，效果线上只有0.668925
## version=4.0 distrill=True   线下--效果差不多，最后崩了

# 加层, video_encoder 后接 bi-gru
## version=5.0  效果一般,

*************20220708*************
## version = 3.0 baseline 线下6805，线上0.67073
## version=8.0  均匀取桢
 # 线下6805， 线上只有0.669545

## version=7.0  均匀取桢 +bigru + Add&norm
 效果不行
## version=9.0 多预测输出，求loss，差

*************20220711*************
 ## version=10.0  随即增强，效果不行
 ## version=11.0  num_cross_layer=6, 开始loss低，迭代后效果不行
 ## version=11.0  albef 线下6679 4/10轮
*************20220712*************
 ## version=12.0  apex+ap16 3/10轮， 线下6744, 训练速度100s->72s， 推理速度242s->129s, gpu内存降低20%不到
  提交一把, 线上0.668968
  # 重新跑 GPU22358MiB
  # docker安装apex

  # DP DDP fp16+DDP速度 ， 8桢+bs256， 100steps.两卡DDP提速一般
  # DP = 101s， DDP=97s， fp16+DDP=69s

 # 测试推理速度
  DP8桢+bs256, 推理速度 242s
  apex+ap16, 8桢+bs256, 推理速度 129s， gpu 82%
  apex+ap16, 16桢+bs128, 推理速度 227s， gpu 82%

  apex+ap16, 32桢+bs64, 推理速度 415s， gpu 82%
  apex+ap16, 32桢+bs72, 推理速度 417s， gpu 90+
  apex+ap16, 32桢+bs80, 推理速度 415s， gpu 82%
*************20220713*************
 ## version=13.0  apex+ap16 4/10轮，676，loss极大，线上0.665863,  bs 变小，lr未调小

 ## version=14.0  apex+ap16, 8桢+bs256, 继续调试 3/10轮,线下0.676 loss=1.277，线上0.6715
 ## v14基准,调试 version=15.0 warm_ratio = 0.05, lr调小 效果一样
 ## vesion=16.0 数据 无效果
 ## vesion=17.0  16+16, lr调小 3轮/10 6776 loss=1.294
 *************20220714*************
  ## vesion=1.0 8+32 no ema, DDP+DP
  # version=18.0 16+16, ema, ddpfp16, accumulate_step=2, lr不变， 3/10轮,线下0.6791 loss=1.271，线上0.672584
  # version=19.0 8+32,  num_cross_layer=5 线下6712
  # version=20.0 32+8  ema, ddpfp16, accumulate_step=4, lr不变， 3/10轮,线下0.6865 loss=1.270，线上

# todo 推理时,去掉 log_softmax操作
 *************20220715*************
 测试速度
 apex+ap16, 32桢,   pin_memory=True,prefetch_factor=8,num_workers=4,bs=64，
 1. 速度417s, DP速度671s， 输出结果一致， 感觉可以DP训练，DDP+FP16推理
 2. num_workers=8 killed
# todo
# todo 视频+ocr(B*N形式)交互=>视频表示（Bs,768)  再与title,asr交互(BS,768), 在视频表示与文本表示交互, 改动较大

 *************20220716-17*************
 # version=21.0 8+32  ema, ddpfp16, swin-tiny-22k权重, 线下6865  loss=1.256, fp16推理速度=160s， 线上6764
 # version=21.0 8+32  ema, DP 4轮/10轮 线下6925 loss=1.295， fp16推理, 速度=160s ；DP推理，速度=272s；

 # version=22.0 8+32  ema, ddpfp16, swin_small_patch4_window7_224_22k.pth, 几乎满gpu 30074MiB，训练速度=95s,
   线下6891  loss=1.226, fp16推理速度=211s， 线上, 去掉swin里面的mask速度190s, 线上0.682461

 # version=23.0  8+16  ema, ddpfp16, swin_base, 线下6901 loss=1.224,test_batch_size=128, 推理速度=239s，线上0.684276
 # version=24.0  8+16  ema, ddpfp16, swin_large, 满gpu 线下6979 loss=1.207,test_batch_size=128, 推理速度=362s，线上0.690396
 # version=25.0  8+16  ema, ddpfp16, swin_large, 冻结swin层, 线下6837

 # 24 swin-large 微调版本，保存
 #version=26.0  swin微调版本,冻结swin层 6909 loss=1.339

 #version=27.0  swin_large+32帧+ bs=4, 训练时间太长，epoch1=6495(v24.0: 6409)
 # 安装
      $ pip install nvidia-pyindex
      $ pip install pytorch-quantization

 *************20220718-19*************
 #version=28.0(基于24）  正则化（weight_decay: 0.02，dropout=0.3）， 效果一般
 #version bug 加train_dataloader.sampler.set_epoch(epoch); 线下7009(+3k)，loss=1.168，线上0.695235，线上推理363s

 #重跑base version=23 线下6946 loass=1.265，线上0.6907,
   #继续vedio_proj dropout去掉, 线下0.6960 loss=1.173,
   #去掉cls_linear前的dropout, 线下0.6996(+5k) loss =1.154, 线上0.692376(+1.6K)，线上推理速度=239s
   #加text_proj_linear层0.6969 loss=1.155 不行
 # 优化图片读出, to_tensor, norimal 可以在GPU做, test测试1000个图片速度下降28s->19s,68%



 # version=29 基于23, 调整架构 cross_layers=1, 线下6998，loss=1.147, 线上692648，233s
 #version=30 基于23, 调整架构 cross_layers=3+ADD loss=7002, loss=1.161， 线上693094；dockerv13;
   # docker v14 test datahelper 跟train一致，4.4%结果不一致， 线上622998
   # 测试速度 加载数据时间80s,GPU满的，CPU不是瓶颈
  -- #version=31基于23, 调整架构 cross_layers=6+ADD

  # version=32 FGM base(基于30)， 线下7015,loss=1.123 线上0.697992(+5K)
  # verison=33 no ema 4轮 6641
  # version=34 cross_layers=6,跑完 下线6970, loss=1.156


  # 测试速度 base
  # 8桢+ bs128, gpu 18628, 速度=239s
  # 16桢+bs64, gpu 18628, 速度=437s

  # DDP+half
  # 8桢 + bs128, gpu 11732MiB, 速度=222s, 0.0003200128005120205的差距,
  # 16桢 + bs128 gpu 31204MiB，速度=420s
  # 24桢 + bs128 gpu 31204MiB，速度=592s
  # 优化

  # version=35(30) freeze swin, 训练速度快,内存占用少 下线0.6885，loss=1.184， 线上 0.68248

  # 预训练V1.0 epoch2 - 3loss上升
  # verison=36， 预训练epoch2， 对比V30
